import numpy as np
import quaternion
import argparse

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Convert redwood .log to tum .freiburg')
    parser.add_argument('filename', type=str, help='input filename[.log]')

    args = parser.parse_args()

    poses = []
    with open(args.filename) as f:
        lines = f.readlines()
        for i in range(0, len(lines), 5):
            T = np.zeros((4, 4))
            for r in range(0, 4):
                T[r, :] = list(map(float, lines[i + r + 1].split()))
            translation = T[0:3, 3]
            rotation = T[0:3, 0:3]
            q = quaternion.from_rotation_matrix(rotation)
            q_tum = quaternion.as_float_array(q)[[1, 2, 3, 0]]
            poses.append(np.concatenate((translation, q_tum)))

    with open(args.filename[:-4] + '.freiburg', 'w') as f:
        f.write('# generated by convert_log_to_freiburg.py\n')
        for i, pose in enumerate(poses):
            f.write('{} {} {} {} {} {} {} {}\n'.format(
                    i, 
                    pose[0], pose[1], pose[2], 
                    pose[3], pose[4], pose[5], pose[6]))
